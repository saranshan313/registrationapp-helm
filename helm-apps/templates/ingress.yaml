apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "app.fullname" . }}
  annotations:
    alb.ingress.kubernetes.io/load-balancer-name: '{{ .Values.ingress.loadbalancername }}'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP 
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-path: '/healthcheck'    
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '{{ .Values.ingress.health_interval }}'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '{{ .Values.ingress.timeoutSeconds }}'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '{{ .Values.ingress.Unhealthy_threshold }}'
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80}]'
    #alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=1800
    alb.ingress.kubernetes.io/group.name: '{{ .Values.ingress.stack }}'
    alb.ingress.kubernetes.io/group.order: '1'
    alb.ingress.kubernetes.io/security-groups: '{{ .Values.ingress.securityGroups }}'
    alb.ingress.kubernetes.io/tags: '{{ .Values.ingress.tags }}'
    alb.ingress.kubernetes.io/target-type: ip

spec:
  ingressClassName: {{ .Values.ingress.ingressClassName }}
  rules:
  #- host: {{ .Values.ingress.hostName }}
  - http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: {{ include "app.fullname" . }}
            port:
              number: 80
